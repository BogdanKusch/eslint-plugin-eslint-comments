(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{149:function(e,t,n){"use strict";const s=n(230),i=/[^\r\n\u2028\u2029]*(?:\r\n|[\r\n\u2028\u2029]|$)/gu,l=/^(eslint(?:-env|-enable|-disable(?:(?:-next)?-line)?)?|exported|globals?)(?:\s|$)/u,o=/^eslint-disable-(next-)?line$/u;e.exports={toForceLocation:e=>({start:{line:e.start.line,column:-1},end:e.end}),toRuleIdLocation(t,n){if(null==n)return e.exports.toForceLocation(t.loc);const l=t.value.match(i),o=new RegExp(`([\\s,]|^)${s(n)}(?:[\\s,]|$)`);{const e=o.exec(l[0]);if(null!=e){const s=t.loc.start;return{start:{line:s.line,column:2+s.column+e.index+e[1].length},end:{line:s.line,column:2+s.column+e.index+e[1].length+n.length}}}}for(let e=1;e<l.length;++e){const s=o.exec(l[e]);if(null!=s){const i=t.loc.start;return{start:{line:i.line+e,column:s.index+s[1].length},end:{line:i.line+e,column:s.index+s[1].length+n.length}}}}return t.loc},lte:(e,t)=>e.line<t.line||e.line===t.line&&e.column<=t.column,parseDirectiveComment(e){const{text:t,description:n}=function(e){const t=e.split(/\s-{2,}\s/u);return{text:t[0].trim(),description:t.length>1?t[1].trim():null}}(e.value),s=l.exec(t);if(!s)return null;const i=s[1],r=o.test(i);if("Line"===e.type&&!r)return null;if(r&&e.loc.start.line!==e.loc.end.line)return null;return{kind:i,value:t.slice(s.index+i.length).trim(),description:n}}}},153:function(e,t,n){"use strict";const s=n(149),i=/[\s,]+/gu,l=new WeakMap;e.exports=class e{static get(t){let n=l.get(t.ast);return null==n&&(n=new e,n._scan(t),l.set(t.ast,n)),n}constructor(){this.areas=[],this.duplicateDisableDirectives=[],this.unusedEnableDirectives=[],this.numberOfRelatedDisableDirectives=new Map}_disable(e,t,n,s){if(n)for(const i of n)null!=this._getArea(i,t)&&this.duplicateDisableDirectives.push({comment:e,ruleId:i}),this.areas.push({comment:e,ruleId:i,kind:s,start:t,end:null});else null!=this._getArea(null,t)&&this.duplicateDisableDirectives.push({comment:e,ruleId:null}),this.areas.push({comment:e,ruleId:null,kind:s,start:t,end:null})}_enable(e,t,n,s){const i=new Set;if(n)for(const l of n){let n=!1;for(let e=this.areas.length-1;e>=0;--e){const o=this.areas[e];null===o.end&&o.kind===s&&o.ruleId===l&&(i.add(o.comment),o.end=t,n=!0)}n||this.unusedEnableDirectives.push({comment:e,ruleId:l})}else{let n=!1;for(let e=this.areas.length-1;e>=0;--e){const l=this.areas[e];null===l.end&&l.kind===s&&(i.add(l.comment),l.end=t,n=!0)}n||this.unusedEnableDirectives.push({comment:e,ruleId:null})}this.numberOfRelatedDisableDirectives.set(e,i.size)}_getArea(e,t){for(let n=this.areas.length-1;n>=0;--n){const i=this.areas[n];if((null===i.ruleId||i.ruleId===e)&&s.lte(i.start,t)&&(null===i.end||s.lte(t,i.end)))return i}return null}_scan(e){for(const t of e.getAllComments()){const e=s.parseDirectiveComment(t);if(null==e)continue;const n=e.kind;if("eslint-disable"!==n&&"eslint-enable"!==n&&"eslint-disable-line"!==n&&"eslint-disable-next-line"!==n)continue;const l=e.value?e.value.split(i):null;if("eslint-disable"===n)this._disable(t,t.loc.start,l,"block");else if("eslint-enable"===n)this._enable(t,t.loc.start,l,"block");else if("eslint-disable-line"===n){const e=t.loc.start.line,n={line:e,column:0},s={line:e+1,column:-1};this._disable(t,n,l,"line"),this._enable(t,s,l,"line")}else if("eslint-disable-next-line"===n){const e=t.loc.start.line,n={line:e+1,column:0},s={line:e+2,column:-1};this._disable(t,n,l,"line"),this._enable(t,s,l,"line")}}}}},176:function(e,t,n){},183:function(e,t,n){"use strict";const s=n(236),{toRuleIdLocation:i}=n(149),l=/'(.+?)'/u;function o(e,t){const n=e&&e.rules,s=n&&n[t];switch(Array.isArray(s)?s[0]:s){case 2:case"error":return 2;case 1:case"warn":return 1;default:return 0}}function r(e,t){if(null!=t){const n={line:e.line,column:e.column-1},s=t.getIndexFromLoc(n),i={includeComments:!0},l=t.getTokenByRangeStart(s,i);if(null!=l&&("Line"===l.type||"Block"===l.type))return l}}function c(e){return!e.fatal&&!e.ruleId&&e.message.includes("eslint-disable")}function a(e,t,n,s){const o=Object.assign({},n),r=l.exec(n.message),c=r&&r[1];if(o.ruleId=e,o.severity=t,o.message=c?`'${c}' rule is disabled but never reported.`:"ESLint rules are disabled but never reported.",o.suggestions=[],null!=s){if(c){const e=i(s,c);o.line=e.start.line,o.column=e.start.column+1,o.endLine=e.end.line,o.endColumn=e.end.column+1}else o.endLine=s.loc.end.line,o.endColumn=s.loc.end.column+1;s.value.includes(",")||s.value.includes("--")||(o.suggestions=[{desc:"Remove `eslint-disable` comment.",fix:{range:s.range,text:s.value.includes("\n")?"\n":""}}])}return o}function u(e,t,n,s,i){for(let l=e.length-1;l>=0;--l){const o=e[l];if(!c(o))continue;const u=a(n,s,o,r(o,t));i?e.splice(l+1,0,u):e.splice(l,1,u)}return e}e.exports=(e="eslint-comments/no-unused-disable")=>{for(const t of s()){const n=t.prototype._verifyWithoutProcessors;Object.defineProperty(t.prototype,"_verifyWithoutProcessors",{value:function(t,s,i){const l=o(s,e);if(0===l)return n.call(this,t,s,i);const r="string"==typeof i?{filename:i}:i||{},c=Boolean(r.reportUnusedDisableDirectives);return u(n.call(this,t,s,Object.assign({},r,{reportUnusedDisableDirectives:!0})),this.getSourceCode(),e,l,c)},configurable:!0,writable:!0})}}},225:function(e,t,n){"use strict";e.exports={configs:n(226),rules:n(228),utils:n(307)}},226:function(e,t,n){"use strict";e.exports={recommended:n(227)}},227:function(e,t,n){"use strict";e.exports={plugins:["eslint-comments"],rules:{"eslint-comments/disable-enable-pair":"error","eslint-comments/no-aggregating-enable":"error","eslint-comments/no-duplicate-disable":"error","eslint-comments/no-unlimited-disable":"error","eslint-comments/no-unused-enable":"error"}}},228:function(e,t,n){"use strict";e.exports={"disable-enable-pair":n(229),"no-aggregating-enable":n(231),"no-duplicate-disable":n(232),"no-restricted-disable":n(233),"no-unlimited-disable":n(234),"no-unused-disable":n(235),"no-unused-enable":n(304),"no-use":n(305),"require-description":n(306)}},229:function(e,t,n){"use strict";const s=n(153),i=n(149);e.exports={meta:{docs:{description:"require a `eslint-enable` comment for every `eslint-disable` comment",category:"Best Practices",recommended:!0,url:"https://mysticatea.github.io/eslint-plugin-eslint-comments/rules/disable-enable-pair.html"},fixable:null,schema:[{type:"object",properties:{allowWholeFile:{type:"boolean"}},additionalProperties:!1}],type:"suggestion"},create(e){const t=e.options[0]&&e.options[0].allowWholeFile,n=e.getSourceCode(),l=s.get(n);return{Program(n){if(!t||0!==n.body.length)for(const s of l.areas)null==s.end&&(t&&i.lte(s.start,n.loc.start)||e.report({loc:i.toRuleIdLocation(s.comment,s.ruleId),message:s.ruleId?"Requires 'eslint-enable' directive for '{{ruleId}}'.":"Requires 'eslint-enable' directive.",data:s}))}}}}},231:function(e,t,n){"use strict";const s=n(153),i=n(149);e.exports={meta:{docs:{description:"disallow a `eslint-enable` comment for multiple `eslint-disable` comments",category:"Best Practices",recommended:!0,url:"https://mysticatea.github.io/eslint-plugin-eslint-comments/rules/no-aggregating-enable.html"},fixable:null,schema:[],type:"suggestion"},create(e){const t=e.getSourceCode(),n=s.get(t);return{Program(){for(const t of n.numberOfRelatedDisableDirectives){const n=t[0],s=t[1];s>=2&&e.report({loc:i.toForceLocation(n.loc),message:"This `eslint-enable` comment affects {{count}} `eslint-disable` comments. An `eslint-enable` comment should be for an `eslint-disable` comment.",data:{count:s}})}}}}}},232:function(e,t,n){"use strict";const s=n(153),i=n(149);e.exports={meta:{docs:{description:"disallow duplicate `eslint-disable` comments",category:"Best Practices",recommended:!0,url:"https://mysticatea.github.io/eslint-plugin-eslint-comments/rules/no-duplicate-disable.html"},fixable:null,schema:[],type:"problem"},create(e){const t=e.getSourceCode(),n=s.get(t);return{Program(){for(const t of n.duplicateDisableDirectives)e.report({loc:i.toRuleIdLocation(t.comment,t.ruleId),message:t.ruleId?"'{{ruleId}}' rule has been disabled already.":"ESLint rules have been disabled already.",data:t})}}}}},233:function(e,t,n){"use strict";const s=n(182),i=n(153),l=n(149);e.exports={meta:{docs:{description:"disallow `eslint-disable` comments about specific rules",category:"Stylistic Issues",recommended:!1,url:"https://mysticatea.github.io/eslint-plugin-eslint-comments/rules/no-restricted-disable.html"},fixable:null,schema:{type:"array",items:{type:"string"},uniqueItems:!0},type:"suggestion"},create(e){const t=e.getSourceCode(),n=i.get(t);if(0===e.options.length)return{};const o=s();for(const t of e.options)o.add(t);return{Program(){for(const t of n.areas)(null==t.ruleId||o.ignores(t.ruleId))&&e.report({loc:l.toRuleIdLocation(t.comment,t.ruleId),message:"Disabling '{{ruleId}}' is not allowed.",data:{ruleId:t.ruleId||String(e.options)}})}}}}},234:function(e,t,n){"use strict";const s=n(149);e.exports={meta:{docs:{description:"disallow `eslint-disable` comments without rule names",category:"Best Practices",recommended:!0,url:"https://mysticatea.github.io/eslint-plugin-eslint-comments/rules/no-unlimited-disable.html"},fixable:null,schema:[],type:"suggestion"},create(e){const t=e.getSourceCode();return{Program(){for(const n of t.getAllComments()){const t=s.parseDirectiveComment(n);if(null==t)continue;const i=t.kind;"eslint-disable"!==i&&"eslint-disable-line"!==i&&"eslint-disable-next-line"!==i||(t.value||e.report({loc:s.toForceLocation(n.loc),message:"Unexpected unlimited '{{kind}}' comment. Specify some rule names to disable.",data:{kind:t.kind}}))}}}}}},235:function(e,t,n){"use strict";n(183)(),e.exports={meta:{docs:{description:"disallow unused `eslint-disable` comments",category:"Best Practices",recommended:!1,url:"https://mysticatea.github.io/eslint-plugin-eslint-comments/rules/no-unused-disable.html"},fixable:null,schema:[],type:"problem"},create:()=>({})}},236:function(e,t,n){e.exports=()=>[n(237)]},304:function(e,t,n){"use strict";const s=n(153),i=n(149);e.exports={meta:{docs:{description:"disallow unused `eslint-enable` comments",category:"Best Practices",recommended:!0,url:"https://mysticatea.github.io/eslint-plugin-eslint-comments/rules/no-unused-enable.html"},fixable:null,schema:[],type:"problem"},create(e){const t=e.getSourceCode(),n=s.get(t);return{Program(){for(const t of n.unusedEnableDirectives)e.report({loc:i.toRuleIdLocation(t.comment,t.ruleId),message:t.ruleId?"'{{ruleId}}' rule is re-enabled but it has not been disabled.":"ESLint rules are re-enabled but those have not been disabled.",data:t})}}}}},305:function(e,t,n){"use strict";const s=n(149);e.exports={meta:{docs:{description:"disallow ESLint directive-comments",category:"Stylistic Issues",recommended:!1,url:"https://mysticatea.github.io/eslint-plugin-eslint-comments/rules/no-use.html"},fixable:null,schema:[{type:"object",properties:{allow:{type:"array",items:{enum:["eslint","eslint-disable","eslint-disable-line","eslint-disable-next-line","eslint-enable","eslint-env","exported","global","globals"]},additionalItems:!1,uniqueItems:!0}},additionalProperties:!1}],type:"suggestion"},create(e){const t=e.getSourceCode(),n=new Set(e.options[0]&&e.options[0].allow||[]);return{Program(){for(const i of t.getAllComments()){const t=s.parseDirectiveComment(i);null!=t&&(n.has(t.kind)||e.report({loc:s.toForceLocation(i.loc),message:"Unexpected ESLint directive comment."}))}}}}}},306:function(e,t,n){"use strict";const s=n(149);e.exports={meta:{docs:{description:"require include descriptions in ESLint directive-comments",category:"Stylistic Issues",recommended:!1,url:"https://mysticatea.github.io/eslint-plugin-eslint-comments/rules/require-description.html"},fixable:null,schema:[{type:"object",properties:{ignore:{type:"array",items:{enum:["eslint","eslint-disable","eslint-disable-line","eslint-disable-next-line","eslint-enable","eslint-env","exported","global","globals"]},additionalItems:!1,uniqueItems:!0}},additionalProperties:!1}],type:"suggestion"},create(e){const t=e.getSourceCode(),n=new Set(e.options[0]&&e.options[0].ignore||[]);return{Program(){for(const i of t.getAllComments()){const t=s.parseDirectiveComment(i);null!=t&&(n.has(t.kind)||t.description||e.report({loc:s.toForceLocation(i.loc),message:"Unexpected undescribed directive comment. Include descriptions to explain why the comment is necessary."}))}}}}}},307:function(e,t,n){"use strict";e.exports={patch:n(183)}},308:function(e,t,n){"use strict";var s=n(176);n.n(s).a},340:function(e,t,n){"use strict";n.r(t);var s=n(333),i=n(225),l={name:"ESLintPlayground",components:{EslintEditor:s.a},props:{code:{type:String,required:!0},type:{type:String,required:!0,validator:e=>"bad"===e||"good"===e},reportUnusedDisable:{type:Boolean,default:!1}},data:()=>({linter:null}),computed:{config(){const e={globals:{ArrayBuffer:!1,DataView:!1,Float32Array:!1,Float64Array:!1,Int16Array:!1,Int32Array:!1,Int8Array:!1,Map:!1,Promise:!1,Proxy:!1,Reflect:!1,Set:!1,Symbol:!1,Uint16Array:!1,Uint32Array:!1,Uint8Array:!1,Uint8ClampedArray:!1,WeakMap:!1,WeakSet:!1,Atomics:!1,SharedArrayBuffer:!1},rules:{},parserOptions:{ecmaVersion:2018,sourceType:"module"}};return this.reportUnusedDisable&&(e.rules["eslint-comments/no-unused-disable"]="error"),e},height(){return 20*this.code.split("\n").length+10+"px"}},async mounted(){const{default:e}=await n.e(5).then(n.t.bind(null,335,7)),t=this.linter=new e;for(const e of Object.keys(i.rules))t.defineRule("eslint-comments/"+e,i.rules[e])}},o=(n(308),n(9)),r=Object(o.a)(l,(function(){var e=this.$createElement;return(this._self._c||e)("eslint-editor",{staticClass:"eslint-playground",class:"eslint-playground-"+this.type,style:{height:this.height},attrs:{linter:this.linter,config:this.config,code:this.code,dark:""}})}),[],!1,null,null,null);t.default=r.exports}}]);