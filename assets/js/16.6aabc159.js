(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{197:function(e,t,n){"use strict";n.r(t);var s=n(3),l=Object(s.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"eslint-comments-no-unlimited-disable"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-comments-no-unlimited-disable","aria-hidden":"true"}},[e._v("#")]),e._v(" eslint-comments/no-unlimited-disable")]),e._v(" "),n("blockquote",[n("p",[e._v("disallow "),n("code",[e._v("eslint-disable")]),e._v(" comments without rule names")])]),e._v(" "),n("ul",[n("li",[e._v("🌟 The "),n("code",[e._v('"extends": "plugin:eslint-comments/recommended"')]),e._v(" property in a configuration file enables this rule.")])]),e._v(" "),n("p",[n("code",[e._v("eslint-disable")]),e._v(" directive-comments disable all rules by default. This may cause to overlook some ESLint warnings unintentionally.\nSo you should specify the rules to disable accurately.")]),e._v(" "),n("h2",{attrs:{id:"rule-details"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rule-details","aria-hidden":"true"}},[e._v("#")]),e._v(" Rule Details")]),e._v(" "),n("p",[e._v("Examples of 👎 "),n("strong",[e._v("incorrect")]),e._v(" code for this rule:")]),e._v(" "),n("eslint-playground",{attrs:{type:"bad",code:"/*eslint eslint-comments/no-unlimited-disable: error */\n\nvar foo; //eslint-disable-line\n"}}),e._v(" "),n("p",[e._v("Examples of 👍 "),n("strong",[e._v("correct")]),e._v(" code for this rule:")]),e._v(" "),n("eslint-playground",{attrs:{type:"good",code:"/*eslint eslint-comments/no-unlimited-disable: error */\n\nvar foo; //eslint-disable-line no-unused-vars\n"}})],1)},[],!1,null,null,null);t.default=l.exports}}]);