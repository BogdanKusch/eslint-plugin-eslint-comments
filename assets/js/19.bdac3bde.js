(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{201:function(e,t,s){"use strict";s.r(t);var n=s(2),a=Object(n.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"eslint-comments-no-use"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eslint-comments-no-use","aria-hidden":"true"}},[e._v("#")]),e._v(" eslint-comments/no-use")]),e._v(" "),s("blockquote",[s("p",[e._v("disallow ESLint directive-comments")])]),e._v(" "),s("p",[e._v("Abuse of directive-comments may cause to overlook bugs or upset of coding style.\nThis rule disallows a use of directive-comments.")]),e._v(" "),s("h2",{attrs:{id:"rule-details"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rule-details","aria-hidden":"true"}},[e._v("#")]),e._v(" Rule Details")]),e._v(" "),s("p",[e._v("Examples of ðŸ‘Ž "),s("strong",[e._v("incorrect")]),e._v(" code for this rule:")]),e._v(" "),s("eslint-playground",{attrs:{type:"bad",code:"/*eslint eslint-comments/no-use: error */\n\n/* eslint no-undef: off */\n/* eslint-env browser */\n/* eslint-disable foo */\n/* eslint-enable bar */\n// eslint-disable-line\n// eslint-disable-next-line\n/* exported foo */\n/* global $ */\n/* globals a, b, c */\n"}}),e._v(" "),s("h2",{attrs:{id:"options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options","aria-hidden":"true"}},[e._v("#")]),e._v(" Options")]),e._v(" "),s("p",[e._v("You can specify allowed directive-comments.")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"eslint-comments/no-use"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"allow"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("ul",[s("li",[s("code",[e._v("allow")]),e._v(" option is an array to allow specified directive-comments. The value of the array is some of the following strings:\n"),s("ul",[s("li",[s("code",[e._v('"eslint"')])]),e._v(" "),s("li",[s("code",[e._v('"eslint-disable"')])]),e._v(" "),s("li",[s("code",[e._v('"eslint-disable-line"')])]),e._v(" "),s("li",[s("code",[e._v('"eslint-disable-next-line"')])]),e._v(" "),s("li",[s("code",[e._v('"eslint-enable"')])]),e._v(" "),s("li",[s("code",[e._v('"eslint-env"')])]),e._v(" "),s("li",[s("code",[e._v('"exported"')])]),e._v(" "),s("li",[s("code",[e._v('"global"')])]),e._v(" "),s("li",[s("code",[e._v('"globals"')])])])])]),e._v(" "),s("h2",{attrs:{id:"known-limitations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#known-limitations","aria-hidden":"true"}},[e._v("#")]),e._v(" Known Limitations")]),e._v(" "),s("p",[e._v("This rule cannot prevent the following case:")]),e._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("/* eslint eslint-comments/no-use: off */")]),e._v("\n")])])]),s("p",[e._v("Because ESLint addresses the directive-comment before parsing.")])],1)},[],!1,null,null,null);t.default=a.exports}}]);